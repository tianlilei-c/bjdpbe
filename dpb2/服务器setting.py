"""
Django settings for dpb2 project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1$+@iv2ury64_&to7j1lsi$94h1vw3-7isxq(*g67!a6)bq-k8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # 第三方应用
    'rest_framework',
    'corsheaders',
    'mongoengine',
    
    # 自定义应用
    'dataservice',
    'aiservice',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # CORS中间件
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dpb2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

TEMPLATES[0]['DIRS'] = [BASE_DIR / 'dist']
WSGI_APPLICATION = 'dpb2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# MongoDB连接设置（与采集端一致，包含认证）
MONGODB_SETTINGS = {
    'db': 'bjdp2',
    'host': 'localhost',
    'port': 27017,
    'username': 'liangdyadmin',
    'password': '123llddyy*',
    'authentication_source': 'admin',
    'connect': False,
}   

# REST Framework设置
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
}

# CORS设置
CORS_ALLOW_ALL_ORIGINS = True  # 开发环境下允许所有来源的跨域请求
CORS_ALLOW_CREDENTIALS = True

# JWT设置
JWT_SECRET = 'your-secret-key-for-jwt-power-plant-monitoring-system'

# 天气服务配置（优先从环境变量读取，避免把密钥写死在仓库）
BAIDU_WEATHER_AK = os.getenv('BAIDU_WEATHER_AK', 'QbcyAz5VAPXxHYGOtHBwuE7y8pFjCPnK')
BAIDU_WEATHER_HOST = os.getenv('BAIDU_WEATHER_HOST', 'https://api.map.baidu.com')
BAIDU_WEATHER_URI = os.getenv('BAIDU_WEATHER_URI', '/weather/v1/')
# 默认滨海新区（可按需覆盖）
BAIDU_WEATHER_DISTRICT_ID = os.getenv('BAIDU_WEATHER_DISTRICT_ID', '120116')

# 预测功能开关（默认关闭以免要求安装ML依赖）
PREDICT_ENABLED = os.getenv('PREDICT_ENABLED', '0') == '1'

# DeepSeek AI配置 - 公司内网版本
DEEPSEEKKEY = os.getenv('DEEPSEEKKEY', 'sk-MHszu7sD3mFiE2HW3bD9F6AbD8E5480c922a4fE87e4a0fEc')
DEEPSEEK_MODEL = os.getenv('DEEPSEEK_MODEL', 'DeepSeek-V3')
DEEPSEEK_API_URL = os.getenv('DEEPSEEK_API_URL', 'http://172.30.201.16:3000/v1/chat/completions')
DEEPSEEK_TIMEOUT = int(os.getenv('DEEPSEEK_TIMEOUT', '60'))  # API请求超时时间（秒），默认60秒

# Agent相关配置
AGENT_MAX_DOCS = 5000      # 强制 limit 上限（考虑10秒采集频率）
AGENT_TIMEOUT_S = 20       # 查询超时（增加到20秒）
AGENT_MAX_TIME_RANGE_HOURS = 72  # 最大查询时间范围（3天）
AGENT_DEFAULT_SAMPLE_INTERVAL = 60  # 默认采样间隔（秒）
AGENT_ALLOWED_COLLECTIONS = ['sensor_data']  # 允许的集合列表
